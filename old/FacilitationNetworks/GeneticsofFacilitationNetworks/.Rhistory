library(igraph)
detach(package:sna)
example(walktrap.community)
graph.adjacency(ind.in)
graph.adjacency(abs(ind.in))
ind.in
mode(ind.in)
class(ind.in)
graph.adjacency(ind.in)
image(ind.in)
image(t(ind.in))
ind.in
table(ind.in)
test <- ind.in*10
test
test <- ind.in*1000
test
table(test)
test <- round(test,0)
test
graph.adjacency(test)
graph.adjacency(ind.in*10)
graph.adjacency(ind.in*10)
graph.adjacency(ind.in*1)
graph.adjacency(ind.in*100)
graph.adjacency(ind.in*5)
graph.adjacency(I(ind.in*10))
plot(graph.adjacency(I(ind.in*10)))
ind.in[lower.tri(ind.in)]
ind.in[upper.tri(ind.in)]
ind.in[upper.tri(ind.in)] == ind.in[lower.tri(ind.in)]
table(ind.in[upper.tri(ind.in)])
table(ind.in[lower.tri(ind.in)])
?graph.adjacency
?Matrix
graph.adjacency(ind.in,weighted=TRUE)
length(ind.in[ind.in!=0])
walktrap.community(g.in)
walktrap.community(g.in)
n.mods
i
cush.com[[14]]
image(cush.com[[14]])
image(as.matrix(cush.com[[14]]))
image(as.matrix(cush.com[[14]]))
n.mods
x <- cush.ind[[1]][[1]]
x
y <- cush.ind[[1]][[2]]
x
y
ur
ur
uc
zx
warnings()
zx
i
o
i
?pois.test
?poisson
pois.test
(-10)-(-10)
shapiro.test(unlist(cush.ss))
wilcox.test(unlist(cush.ss))
wilcox.test(unlist(cush.ss),alternative='great')
cush.com[[14]]
x <- cush.com[[14]]
x
hist(x)
hist(unlist(x))
i <- 14
x.out
vegdist(x.out)
apply(x.out,2,sum)
vegdist(t(x.out))
nrow(x.out)
vegdist(x.out)
vegdist(t(x.out))
class(cush.ind)
?heatmap
R
r <- ij
r_ij
r_ij
R
r_ij
R
i
i
i
R
ind.in[[25]]
A <- ind.in[[25]]
A
digits=7
A
G
table(nmod.in)
nmod.in[nmod.in==0]
(1:length(nmod.in))[nmod.in==0]
(1:length(nmod.in))[nmod.in==0]
(1:length(nmod.in))[nmod.in==1]
debug(lapply)
X
X
X
X
X
for (i in 1:length(ind.in)){getModules(ind.in[[i]])}
q
Q
undebug(lapply)
sdf
undebug(lapply)
for (i in 1:length(ind.in)){getModules(ind.in[[i]])}
for (i in 1:length(ind.in)){getModules(ind.out[[i]])}
i
ind.out[[i]]
G
A
G
2
y
install.packages('OpenMX')
cor(dep.in,deg.out)
cor(deg.in,deg.out)
deg.in-deg.out
deg.dif <- deg.in-deg.out
plot(deg.dif~nri.dif)
nri.d
plot(deg.dif~nri.dif)
plot(deg.dif~nri.d)
abline(lm(deg.dif~nri.d))
deg.dif~nri.d
plot(deg.dif~nri.d)
phylo
summary(phylo)
?path.diagram
?path.diagram
names(summary(cush.sem))
install.packages(sem)
install.packages('sem')
update.packages()
install.packages('bipartite')
library(bipartite)
library(bipartite)
installed.packages()
install.packages('tnet')
